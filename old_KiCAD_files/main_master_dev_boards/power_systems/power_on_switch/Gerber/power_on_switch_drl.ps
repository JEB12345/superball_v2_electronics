%!PS-Adobe-3.0
%%Creator: cairo 1.14.2 (http://cairographics.org)
%%CreationDate: Mon May 22 13:11:06 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 27x24mm 77 68 0 () ()
%%BoundingBox: 3 3 75 66
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 27x24mm
%%PageBoundingBox: 3 3 75 66
77 68 cairo_set_page_size
%%EndPageSetup
q 3 3 72 63 rectclip q
0 g
59.457 34.773 m 59.457 36.262 57.227 36.262 57.227 34.773 c 57.227 33.285
 59.457 33.285 59.457 34.773 c f*
65.125 34.773 m 65.125 36.262 62.891 36.262 62.891 34.773 c 62.891 33.285
 65.125 33.285 65.125 34.773 c f*
6.371 50.613 m 6.371 52.484 3.562 52.484 3.562 50.613 c 3.562 48.742 6.371
 48.742 6.371 50.613 c f*
18.613 8.855 m 18.613 10.727 15.805 10.727 15.805 8.855 c 15.805 6.98 18.613
 6.98 18.613 8.855 c f*
74.051 4.535 m 74.051 6.406 71.242 6.406 71.242 4.535 c 71.242 2.664 74.051
 2.664 74.051 4.535 c f*
6.406 64.293 m 6.406 66.215 3.527 66.215 3.527 64.293 c 3.527 62.375 6.406
 62.375 6.406 64.293 c f*
31.609 8.855 m 31.609 10.773 28.727 10.773 28.727 8.855 c 28.727 6.934 
31.609 6.934 31.609 8.855 c f*
66.887 58.535 m 66.887 60.453 64.008 60.453 64.008 58.535 c 64.008 56.613
 66.887 56.613 66.887 58.535 c f*
74.09 18.215 m 74.09 20.133 71.207 20.133 71.207 18.215 c 71.207 16.293
 74.09 16.293 74.09 18.215 c f*
Q Q
showpage
%%Trailer
%%EOF
